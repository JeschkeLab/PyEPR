pyepr.T2RelaxationSequence
==========================

.. py:class:: pyepr.T2RelaxationSequence(*, B, LO, reptime, averages, shots, start=500, step=40, dim=200, **kwargs)

   Bases: :py:obj:`HahnEchoSequence`


   Represents a T2 relaxation sequence. A Hahn Echo where the interpulse delay increases

   Parameters
   ----------
   B : int or float
       The B0 field, in Guass
   LO : int or float
       The LO frequency in GHz
   reptime : _type_
       The shot repetition time in us
   averages : int
       The number of scans.
   shots : int
       The number of shots per point
   start : float
       The minimum interpulse delay in ns, by default 300 ns
   step : float
       The step size of the interpulse delay in ns, by default 50 ns
   dim : int
       The number of points in the X axis

   Optional Parameters
   -------------------
   pi2_pulse : Pulse
       An autoEPR Pulse object describing the excitation pi/2 pulse. If
       not specified a RectPulse will be created instead. 
   pi_pulse : Pulse
       An autoEPR Pulse object describing the refocusing pi pulses. If
       not specified a RectPulse will be created instead. 


   Build a Hahn-Echo sequence using either rectangular pulses or
   specified pulses. By default no progression is added to this sequence.


   :Parameters:

       **B** : int or float
           The B0 field, in Guass

       **LO** : int or float
           The LO frequency in GHz

       **reptime** : _type_
           The shot repetition time in us

       **averages** : int
           The number of scans.

       **shots** : int
           The number of shots per point














   ..
       !! processed by numpydoc !!


   .. py:attribute:: tau


   .. py:attribute:: name
      :value: 'T2RelaxationSequence'



   .. py:method:: simulate(ESEEM_depth=0.1, Tm=1000.0)

