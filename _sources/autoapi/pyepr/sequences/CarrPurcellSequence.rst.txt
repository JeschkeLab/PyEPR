pyepr.sequences.CarrPurcellSequence
===================================

.. py:class:: pyepr.sequences.CarrPurcellSequence(*, B, LO, reptime, averages, shots, n, start=300, step=50, dim=100, **kwargs)

   Bases: :py:obj:`Sequence`


   Represents a Carr-Purcell sequence. 


   Build a Carr-Purcell dynamical decoupling sequence using either 
   rectangular pulses or specified pulses.


   :Parameters:

       **B** : int or float
           The B0 field, in Guass

       **LO** : int or float
           The LO frequency in GHz

       **reptime** : _type_
           The shot repetition time in us

       **averages** : int
           The number of scans.

       **shots** : int
           The number of shots per point

       **n** : int
           The number refocusing pulses

       **start** : float
           The minimum interpulse delay in ns, by default 300 ns

       **step** : float
           The step size of the interpulse delay in ns, by default 50 ns

       **dim** : int
           The number of points in the X axis














   ..
       !! processed by numpydoc !!


   .. py:attribute:: t


   .. py:attribute:: n


   .. py:attribute:: dim


   .. py:method:: _build_sequence()


   .. py:method:: simulate(T_CP=2500.0, e=1.8)

      
      Simulates the Carr-Purcell sequence as a single component stretched exponential decay.

      .. math::
          V(t) = e^(-(t/T_{CP})^e)

      :Parameters:

          **T_CP** : float
              The Carr-Purcell relaxation time, by default 2.5e3 ns

          **e** : float
              The stretching exponent, by default 1.8



      :Returns:

          **xaxis** : np.ndarray
              The x-axis of the simulation

          **data** : np.ndarray
              ..











      ..
          !! processed by numpydoc !!

